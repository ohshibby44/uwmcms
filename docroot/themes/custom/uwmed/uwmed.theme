<?php

/**
 * @file
 * Custom PHP code for the UWMed theme.
 */

use Drupal\Component\Utility\Html;
use Drupal\node\Entity\Node;
use Drupal\uwmcs_reader\Controller\UwmMapper;

/**
 * Implements hook_theme_suggestions_HOOK_alter() for page templates.
 */
function uwmed_theme_suggestions_page_alter(&$suggestions, $variables) {

  // Add content type suggestions.
  if ($node = \Drupal::request()->attributes->get('node')) {
    if (is_object($node)) {
      array_splice($suggestions, 1, 0, 'page__node__' . $node->getType());

    }
  }

}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for page templates.
 */
function uwmed_theme_suggestions_node_alter(&$suggestions, $variables) {

  // Use a default teaser twig, before the full mode content-type twig:
  if (isset($variables['elements']['#node']) && $variables['elements']['#view_mode'] === 'teaser') {
    $suggestions[] = 'node__default__teaser';
  }

}

/**
 * Implements theme_preprocess_region().
 */
function uwmed_preprocess_region(&$variables) {

}

/**
 * Implements theme_preprocess_page().
 */
function uwmed_preprocess_page(&$variables) {
}

/**
 * Implements theme_preprocess_node().
 */
function uwmed_preprocess_node(&$variables) {

  $node = $variables['node'];

  if ($node->getType() === 'uwm_clinic') {

    // Copy Urgent/ Primary care node images:
    if (empty($node->field_clinic_image->value)) {

      if (stripos($node->title->value, 'Urgent') !== FALSE) {

        $path = UwmMapper::getPathByNid($node->nid->value);
        $primaryCareNid = UwmMapper::getNidByPathAlias(
          str_replace('urgent', 'primary', $path));

        if ($primaryCareNid) {

          $pNode = Node::load($primaryCareNid);
          $variables['content']['field_clinic_image'] = $pNode->field_clinic_image->view();

        }

      }

    }

  }

}

/**
 * Implements theme_preprocess_field().
 */
function uwmed_preprocess_field(&$variables) {

  $obj = $variables['element']['#object'] ?? NULL;

  // Get media object value for twig template:
  if ($obj && $obj->hasField('field_media_video_data_url')) {

    $variables['videoUrl'] = $obj->get('field_media_video_data_url')
      ->getValue();
    $variables['captionUrl'] = $obj->get('field_media_video_caption_url')
      ->getValue();

  }

  // Make unique html-id available for templates:
  if ($obj && $obj->hasField('uuid')) {

    $id = $obj->get('uuid')->getValue();
    $id = $id[0]['value'] ?? rand();
    $variables['uwmFieldId'] = Html::getUniqueId('uw-' . $id);

  }

}

/**
 * Implements template_preprocess_views_view().
 */
function uwmed_preprocess_views_view(&$variables) {
}

/**
 * Implements theme_preprocess_page().
 */
function uwmed_page_bottom(array &$page_bottom) {

}

/**
 * Implements hook_preprocess_HOOK() for system branding block templates.
 */
function uwmed_preprocess_block__system_branding_block(&$variables) {

  $variables['site_logo'] = "/{$variables['theme']['path']}/dist/assets/uw-medicine.png";

}

/**
 * Implements hook_preprocess_HOOK() for taxonomy term page templates.
 */
function uwmed_preprocess_page__taxonomy__term(&$variables) {

}

/**
 * Implements hook_preprocess_HOOK() for article author field templates.
 */
function uwmed_preprocess_field__node__field_author__article(&$variables) {

}

/**
 * Implements hook_preprocess_HOOK() for hierarchical term formatter templates.
 */
function uwmed_preprocess_hierarchical_term_formatter(&$variables) {

}

/**
 * Implements hook_preprocess_HOOK() for button input templates.
 */
function uwmed_preprocess_input__button(&$variables) {

}

/**
 * Implements hook_preprocess_HOOK() for homepage_section paragraphs.
 */
function uwmed_preprocess_paragraph__homepage_section(&$variables) {

  $paragraph = $variables['paragraph'];

  if (!$paragraph->field_section_image->isEmpty()) {
    $image_id = $paragraph->field_section_image->getValue()[0]['target_id'];
    $entity = Drupal::entityTypeManager()->getStorage("media")->load($image_id);
    $variables['image_url'] = $entity->image->entity->getFileUri();
  }

  if (!$paragraph->field_accent_color->isEmpty()) {
    $accent_color = $paragraph->get('field_accent_color')->entity->getName();
    $variables['accent_color'] = strtolower($accent_color);
  }
}

/**
 * Implements hook_preprocess_HOOK() for link_with_icon paragraphs.
 */
function uwmed_preprocess_paragraph__link_with_icon(&$variables) {
  $paragraph = $variables['paragraph'];

  if (!$paragraph->field_link->isEmpty()) {
    $variables['url'] = $paragraph->field_link->first()->getUrl();
  }
}

/**
 * Implements hook_preprocess_HOOK() for homepage_section paragraphs.
 */
function uwmed_preprocess_paragraph__feature_story(&$variables) {

  $paragraph = $variables['paragraph'];

  if (!$paragraph->field_section_image->isEmpty()) {
    $image_id = $paragraph->field_section_image->getValue()[0]['target_id'];
    $entity = Drupal::entityTypeManager()->getStorage("media")->load($image_id);
    $variables['image_url'] = $entity->image->entity->getFileUri();
  }
}

/**
 * Implements hook_preprocess_HOOK() for homepage sections templates.
 */
function uwmed_preprocess_field__node__field_homepage_sections(&$variables) {

  $bg_image_urls = [];
  foreach ($variables['items'] as $item) {

    if (!empty($item['content']['#paragraph']->field_section_image)) {

      $section_image = $item['content']['#paragraph']->field_section_image;
      $data = $section_image->getValue();

      if (!empty($data[0]['target_id'])) {
        $image_id = empty($data[0]['target_id']) ? NULL : $data[0]['target_id'];

        $entity = Drupal::entityTypeManager()
          ->getStorage("media")
          ->load($image_id);
      }

      if (!empty($entity->image->entity)) {
        $bg_image_urls[] = $entity->image->entity->getFileUri();
      }

    }
  }

  $variables['bg_image_urls'] = $bg_image_urls;

}

/**
 * Implements hook_preprocess_HOOK() for medical service content type.
 */
function uwmed_preprocess_node__uwm_medical_service(&$variables) {
  $variables["#attached"]['drupalSettings']['uwmcms_reader_primary_care_clinics'] = $variables["node"]->uwmcms_reader_primary_care_clinics;

  $webform = \Drupal::entityTypeManager()
    ->getStorage('webform')
    ->load('health_news_signup');
  $view_builder = \Drupal::service('entity_type.manager')
    ->getViewBuilder('webform');
  $build = $view_builder->view($webform);
  $variables['health_news_you_can_use'] = $build;
}
