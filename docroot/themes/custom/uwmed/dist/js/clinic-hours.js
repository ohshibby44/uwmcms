'use strict';

/**
 * Scripting for clinic-type nodes.
 */

(function ($, Drupal, drupalSettings) {

    'use strict';

    Drupal.behaviors.showCurrentHours = {

        attach: function attach(context, settings) {

            var $elm = $('[data-uwm-opens-at]', context);

            $elm.each(function (a, b) {

                var $this = $(b);
                var data = $this.data('uwm-opens-at');
                var markup = hoursMarkup(data, $this.is('[data-show-brief]'));

                $this.find('em').html(markup);
            });
        }

    };

    function uwf() {

        var s = arguments[0],
            i = arguments.length;

        while (i--) {
            s = s.replace(new RegExp('\\{' + i + '\\}', 'gm'), arguments[i]);
        }
        return s;
    }

    function hoursMarkup(data, showBrief) {

        var now = moment().format('X') * 1;
        var opens = now > data.closes ? data.nextOpens : data.opens;
        var closes = now > data.closes ? data.nextCloses : data.closes;
        var dayToday = moment().format('dddd');
        var dayOpens = moment.unix(opens).format('dddd');

        var markup = '';

        // Opens later:
        if (now < opens) {

            if (showBrief) {
                markup = uwf('<strong>Closed -</strong> Opens {1} at {2}', moment.unix(opens).format('ddd'), moment.unix(opens).format('h:mm'));
            } else {
                markup = uwf('<strong>Closed:</strong> <em>Opens {1} at {2}</em>', moment.unix(opens).format('dddd'), moment.unix(opens).format('h:mm a'));
            }
        }

        // Opens today:
        if (now < opens && dayOpens === dayToday && showBrief) {

            markup = uwf('<strong>Closed -</strong> Opens today at {1}', moment.unix(opens).format('h:mm'));
        }
        // Opens soon:
        if (now < opens && now + 3600 > opens) {

            if (showBrief) {
                markup = uwf('<strong>Opens soon -</strong> {1} - {2}', moment.unix(opens).format('h:mm a'), moment.unix(closes).format('h:mm a'));
            } else {
                markup = uwf('<strong>Opens soon:</strong> <em>{1} - {2}</em>', moment.unix(opens).format('h:mm a'), moment.unix(closes).format('h:mm a'));
            }
        }
        // Open now:
        if (now > opens && now < closes) {

            if (showBrief) {
                markup = uwf('<strong>Open -</strong> Closes at {1}', moment.unix(closes).format('h:mm a'));
            } else {
                markup = uwf('<strong>Open now:</strong> <em>Closes at {1}</em>', moment.unix(closes).format('h:mm a'));
            }
        }
        // Closes soon:
        else if (now > opens && now < closes && now + 3600 > closes) {

                if (showBrief) {
                    markup = uwf('<strong>Closes soon-</strong> {1} - {2}', moment.unix(opens).format('h:mm a'), moment.unix(closes).format('h:mm a'));
                } else {
                    markup = uwf('<strong>Closes soon:</strong> <em>{1} - {2}</em>', moment.unix(opens).format('h:mm a'), moment.unix(closes).format('h:mm a'));
                }
            }

        return markup;
    }
})(jQuery, Drupal, drupalSettings);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaW5pYy1ob3Vycy5qcyJdLCJuYW1lcyI6WyIkIiwiRHJ1cGFsIiwiZHJ1cGFsU2V0dGluZ3MiLCJiZWhhdmlvcnMiLCJzaG93Q3VycmVudEhvdXJzIiwiYXR0YWNoIiwiY29udGV4dCIsInNldHRpbmdzIiwiJGVsbSIsImVhY2giLCJhIiwiYiIsIiR0aGlzIiwiZGF0YSIsIm1hcmt1cCIsImhvdXJzTWFya3VwIiwiaXMiLCJmaW5kIiwiaHRtbCIsInV3ZiIsInMiLCJhcmd1bWVudHMiLCJpIiwibGVuZ3RoIiwicmVwbGFjZSIsIlJlZ0V4cCIsInNob3dCcmllZiIsIm5vdyIsIm1vbWVudCIsImZvcm1hdCIsIm9wZW5zIiwiY2xvc2VzIiwibmV4dE9wZW5zIiwibmV4dENsb3NlcyIsImRheVRvZGF5IiwiZGF5T3BlbnMiLCJ1bml4IiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBS0EsQ0FBQyxVQUFVQSxDQUFWLEVBQWFDLE1BQWIsRUFBcUJDLGNBQXJCLEVBQXFDOztBQUVsQzs7QUFHQUQsV0FBT0UsU0FBUCxDQUFpQkMsZ0JBQWpCLEdBQW9DOztBQUVoQ0MsZ0JBQVEsZ0JBQVVDLE9BQVYsRUFBbUJDLFFBQW5CLEVBQTZCOztBQUVqQyxnQkFBSUMsT0FBT1IsRUFBRSxxQkFBRixFQUF5Qk0sT0FBekIsQ0FBWDs7QUFFQUUsaUJBQUtDLElBQUwsQ0FBVSxVQUFVQyxDQUFWLEVBQWFDLENBQWIsRUFBZ0I7O0FBRXRCLG9CQUFJQyxRQUFRWixFQUFFVyxDQUFGLENBQVo7QUFDQSxvQkFBSUUsT0FBT0QsTUFBTUMsSUFBTixDQUFXLGNBQVgsQ0FBWDtBQUNBLG9CQUFJQyxTQUFTQyxZQUFZRixJQUFaLEVBQWtCRCxNQUFNSSxFQUFOLENBQVMsbUJBQVQsQ0FBbEIsQ0FBYjs7QUFFQUosc0JBQU1LLElBQU4sQ0FBVyxJQUFYLEVBQWlCQyxJQUFqQixDQUFzQkosTUFBdEI7QUFFSCxhQVJEO0FBVUg7O0FBaEIrQixLQUFwQzs7QUFxQkEsYUFB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QixDQUEyQixRQUEzQixDQURLLENBQVQ7QUFHSDtBQUVKO0FBQ0Q7QUFkQSxhQWVLLElBQUlGLE1BQU1HLEtBQU4sSUFBZUgsTUFBTUksTUFBckIsSUFBK0JKLE1BQU0sSUFBTixHQUFhSSxNQUFoRCxFQUF3RDs7QUFFekQsb0JBQUlMLFNBQUosRUFBZTtBQUNYWiw2QkFBU0ssSUFBSSx5Q0FBSixFQUNMUyxPQUFPUSxJQUFQLENBQVlOLEtBQVosRUFBbUJELE1BQW5CLENBQTBCLFFBQTFCLENBREssRUFFTEQsT0FBT1EsSUFBUCxDQUFZTCxNQUFaLEVBQW9CRixNQUFwQixDQUEyQixRQUEzQixDQUZLLENBQVQ7QUFJSCxpQkFMRCxNQU1LO0FBQ0RmLDZCQUFTSyxJQUFJLGtEQUFKLEVBQ0xTLE9BQU9RLElBQVAsQ0FBWU4sS0FBWixFQUFtQkQsTUFBbkIsQ0FBMEIsUUFBMUIsQ0FESyxFQUVMRCxPQUFPUSxJQUFQLENBQVlMLE1BQVosRUFBb0JGLE1BQXBCLENBQTJCLFFBQTNCLENBRkssQ0FBVDtBQUlIO0FBRUo7O0FBRUQsZUFBT2YsTUFBUDtBQUVIO0FBR0osQ0FoSUQsRUFnSUd1QixNQWhJSCxFQWdJV3BDLE1BaElYLEVBZ0ltQkMsY0FoSW5CIiwiZmlsZSI6ImNsaW5pYy1ob3Vycy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU2NyaXB0aW5nIGZvciBjbGluaWMtdHlwZSBub2Rlcy5cbiAqL1xuXG5cbihmdW5jdGlvbiAoJCwgRHJ1cGFsLCBkcnVwYWxTZXR0aW5ncykge1xuXG4gICAgJ3VzZSBzdHJpY3QnO1xuXG5cbiAgICBEcnVwYWwuYmVoYXZpb3JzLnNob3dDdXJyZW50SG91cnMgPSB7XG5cbiAgICAgICAgYXR0YWNoOiBmdW5jdGlvbiAoY29udGV4dCwgc2V0dGluZ3MpIHtcblxuICAgICAgICAgICAgdmFyICRlbG0gPSAkKCdbZGF0YS11d20tb3BlbnMtYXRdJywgY29udGV4dCk7XG5cbiAgICAgICAgICAgICRlbG0uZWFjaChmdW5jdGlvbiAoYSwgYikge1xuXG4gICAgICAgICAgICAgICAgdmFyICR0aGlzID0gJChiKTtcbiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9ICR0aGlzLmRhdGEoJ3V3bS1vcGVucy1hdCcpO1xuICAgICAgICAgICAgICAgIHZhciBtYXJrdXAgPSBob3Vyc01hcmt1cChkYXRhLCAkdGhpcy5pcygnW2RhdGEtc2hvdy1icmllZl0nKSk7XG5cbiAgICAgICAgICAgICAgICAkdGhpcy5maW5kKCdlbScpLmh0bWwobWFya3VwKTtcblxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgfVxuXG4gICAgfTtcblxuXG4gICAgZnVuY3Rpb24gdXdmKCkge1xuXG4gICAgICAgIHZhciBzID0gYXJndW1lbnRzWzBdLFxuICAgICAgICAgICAgaSA9IGFyZ3VtZW50cy5sZW5ndGg7XG5cbiAgICAgICAgd2hpbGUgKGktLSkge1xuICAgICAgICAgICAgcyA9IHMucmVwbGFjZShuZXcgUmVnRXhwKCdcXFxceycgKyBpICsgJ1xcXFx9JywgJ2dtJyksIGFyZ3VtZW50c1tpXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHM7XG5cbiAgICB9XG5cblxuICAgIGZ1bmN0aW9uIGhvdXJzTWFya3VwKGRhdGEsIHNob3dCcmllZikge1xuXG4gICAgICAgIHZhciBub3cgPSBtb21lbnQoKS5mb3JtYXQoJ1gnKSAqIDE7XG4gICAgICAgIHZhciBvcGVucyA9IG5vdyA+IGRhdGEuY2xvc2VzID8gZGF0YS5uZXh0T3BlbnMgOiBkYXRhLm9wZW5zO1xuICAgICAgICB2YXIgY2xvc2VzID0gbm93ID4gZGF0YS5jbG9zZXMgPyBkYXRhLm5leHRDbG9zZXMgOiBkYXRhLmNsb3NlcztcbiAgICAgICAgdmFyIGRheVRvZGF5ID0gbW9tZW50KCkuZm9ybWF0KCdkZGRkJyk7XG4gICAgICAgIHZhciBkYXlPcGVucyA9IG1vbWVudC51bml4KG9wZW5zKS5mb3JtYXQoJ2RkZGQnKTtcblxuICAgICAgICB2YXIgbWFya3VwID0gJyc7XG5cbiAgICAgICAgLy8gT3BlbnMgbGF0ZXI6XG4gICAgICAgIGlmIChub3cgPCBvcGVucykge1xuXG4gICAgICAgICAgICBpZiAoc2hvd0JyaWVmKSB7XG4gICAgICAgICAgICAgICAgbWFya3VwID0gdXdmKCc8c3Ryb25nPkNsb3NlZCAtPC9zdHJvbmc+IE9wZW5zIHsxfSBhdCB7Mn0nLFxuICAgICAgICAgICAgICAgICAgICBtb21lbnQudW5peChvcGVucykuZm9ybWF0KCdkZGQnKSxcbiAgICAgICAgICAgICAgICAgICAgbW9tZW50LnVuaXgob3BlbnMpLmZvcm1hdCgnaDptbScpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbWFya3VwID0gdXdmKCc8c3Ryb25nPkNsb3NlZDo8L3N0cm9uZz4gPGVtPk9wZW5zIHsxfSBhdCB7Mn08L2VtPicsXG4gICAgICAgICAgICAgICAgICAgIG1vbWVudC51bml4KG9wZW5zKS5mb3JtYXQoJ2RkZGQnKSxcbiAgICAgICAgICAgICAgICAgICAgbW9tZW50LnVuaXgob3BlbnMpLmZvcm1hdCgnaDptbSBhJylcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cblxuICAgICAgICAvLyBPcGVucyB0b2RheTpcbiAgICAgICAgaWYgKG5vdyA8IG9wZW5zICYmIGRheU9wZW5zID09PSBkYXlUb2RheSAmJiBzaG93QnJpZWYpIHtcblxuICAgICAgICAgICAgbWFya3VwID0gdXdmKCc8c3Ryb25nPkNsb3NlZCAtPC9zdHJvbmc+IE9wZW5zIHRvZGF5IGF0IHsxfScsXG4gICAgICAgICAgICAgICAgbW9tZW50LnVuaXgob3BlbnMpLmZvcm1hdCgnaDptbScpXG4gICAgICAgICAgICApO1xuXG4gICAgICAgIH1cbiAgICAgICAgLy8gT3BlbnMgc29vbjpcbiAgICAgICAgaWYgKG5vdyA8IG9wZW5zICYmIG5vdyArIDM2MDAgPiBvcGVucykge1xuXG4gICAgICAgICAgICBpZiAoc2hvd0JyaWVmKSB7XG4gICAgICAgICAgICAgICAgbWFya3VwID0gdXdmKCc8c3Ryb25nPk9wZW5zIHNvb24gLTwvc3Ryb25nPiB7MX0gLSB7Mn0nLFxuICAgICAgICAgICAgICAgICAgICBtb21lbnQudW5peChvcGVucykuZm9ybWF0KCdoOm1tIGEnKSxcbiAgICAgICAgICAgICAgICAgICAgbW9tZW50LnVuaXgoY2xvc2VzKS5mb3JtYXQoJ2g6bW0gYScpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbWFya3VwID0gdXdmKCc8c3Ryb25nPk9wZW5zIHNvb246PC9zdHJvbmc+IDxlbT57MX0gLSB7Mn08L2VtPicsXG4gICAgICAgICAgICAgICAgICAgIG1vbWVudC51bml4KG9wZW5zKS5mb3JtYXQoJ2g6bW0gYScpLFxuICAgICAgICAgICAgICAgICAgICBtb21lbnQudW5peChjbG9zZXMpLmZvcm1hdCgnaDptbSBhJylcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cbiAgICAgICAgLy8gT3BlbiBub3c6XG4gICAgICAgIGlmIChub3cgPiBvcGVucyAmJiBub3cgPCBjbG9zZXMpIHtcblxuICAgICAgICAgICAgaWYgKHNob3dCcmllZikge1xuICAgICAgICAgICAgICAgIG1hcmt1cCA9IHV3ZignPHN0cm9uZz5PcGVuIC08L3N0cm9uZz4gQ2xvc2VzIGF0IHsxfScsXG4gICAgICAgICAgICAgICAgICAgIG1vbWVudC51bml4KGNsb3NlcykuZm9ybWF0KCdoOm1tIGEnKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBtYXJrdXAgPSB1d2YoJzxzdHJvbmc+T3BlbiBub3c6PC9zdHJvbmc+IDxlbT5DbG9zZXMgYXQgezF9PC9lbT4nLFxuICAgICAgICAgICAgICAgICAgICBtb21lbnQudW5peChjbG9zZXMpLmZvcm1hdCgnaDptbSBhJylcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgIH1cbiAgICAgICAgLy8gQ2xvc2VzIHNvb246XG4gICAgICAgIGVsc2UgaWYgKG5vdyA+IG9wZW5zICYmIG5vdyA8IGNsb3NlcyAmJiBub3cgKyAzNjAwID4gY2xvc2VzKSB7XG5cbiAgICAgICAgICAgIGlmIChzaG93QnJpZWYpIHtcbiAgICAgICAgICAgICAgICBtYXJrdXAgPSB1d2YoJzxzdHJvbmc+Q2xvc2VzIHNvb24tPC9zdHJvbmc+IHsxfSAtIHsyfScsXG4gICAgICAgICAgICAgICAgICAgIG1vbWVudC51bml4KG9wZW5zKS5mb3JtYXQoJ2g6bW0gYScpLFxuICAgICAgICAgICAgICAgICAgICBtb21lbnQudW5peChjbG9zZXMpLmZvcm1hdCgnaDptbSBhJylcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbWFya3VwID0gdXdmKCc8c3Ryb25nPkNsb3NlcyBzb29uOjwvc3Ryb25nPiA8ZW0+ezF9IC0gezJ9PC9lbT4nLFxuICAgICAgICAgICAgICAgICAgICBtb21lbnQudW5peChvcGVucykuZm9ybWF0KCdoOm1tIGEnKSxcbiAgICAgICAgICAgICAgICAgICAgbW9tZW50LnVuaXgoY2xvc2VzKS5mb3JtYXQoJ2g6bW0gYScpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG1hcmt1cDtcblxuICAgIH1cblxuXG59KShqUXVlcnksIERydXBhbCwgZHJ1cGFsU2V0dGluZ3MpO1xuIl19
